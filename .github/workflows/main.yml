name: NodeJS Github Actions

on:
  workflow_dispatch:
    inputs:
      deployment_platform:
        description: 'Distribution Channel'
        type: choice
        required: true
        options:
          - 'Firebase'
          - 'TestFlight'
          - 'App Store'
      environments:
        description: 'Environmets'
        default: "SIT"
        type: choice
        required: false
        options:
          - 'SIT'
          - 'UAT'
          - 'Staging'
          - 'Production'
        
      credential:
        description: 'Credential'
        default: "Regov"
        type: choice
        required: false
        options:
          - 'Regov'
          - 'KIB'
  push:
    branches:
      - main
  

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Readme File Reader
        run: cat readme.txt
      - name: Install npm  
        run: npm install
      - name: Run test 
        run: npm test
      - name: Test prompt 
        run: echo "test has been executed This is Main Branch"
      

  DeployDev:
    name: Deploy to DEV Environment
    if: github.head_ref == 'DEV'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    environment:
      name: DEV
      url: "http://dev.Reach.com"
    steps:
      - name: Deploy
        run: |
          echo "Deploying to DEV Environment"
          echo "Deployment platform: ${{ github.event.inputs.deployment_platform }}"
          echo "Credential: ${{ github.event.inputs.credential }}"
          #This is where the deployment phase should be coded

  DeploySIT:
    name: Deploy to SIT Environment
    if: ${{github.head_ref == 'workflow_dispatch'}}
    needs: [build-and-test]
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: "http://SIT.Reach.com"
    steps:
      - name: Prompt for Target Environment
        if: ${{ github.event.inputs.environments == 'SIT'}}
        run: |
          echo "Deploying to SIT"
    
      - name: Prompt for Target Environment
        if: ${{ github.event.inputs.environments == 'UAT'}}
        run: |
          echo "Deploying to UAT"
      

      - name: Deploy
        run: echo "Deploying to SIT Environment"
        #This is where the deployment phase should be coded

  DeployStaging:
    name: Deploy to Staging Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: "http://Staging.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to Staging Environment"
        #This is where the deployment phase should be coded

  DeployPre-prodution:
    name: Deploy to Pre-prod Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    environment:
      name: Pre-production
      url: "http://Pre-prod.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to Pre-prod Environment"
        #This is where the deployment phase should be coded\
      
  DeployMaster:
    name: Deploy to Master Environment
    if: github.event.ref == 'refs/heads/DEV'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    environment:
      name: master
      url: "http://www.Reach.com"
    steps:
      - name: Deploy
        run: echo "Deploying to Production Environment"
        #This is where the deployment phase should be coded

